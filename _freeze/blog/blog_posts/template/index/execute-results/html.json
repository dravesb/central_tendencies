{
  "hash": "0f676ccc4d37fccb448931898d18aa69",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Paper Notes - GroupLens: An Open Architecture for Collaborative Filtering of Netnews\"\ndescription: \"Paper notes on original GroupLens paper introducing Collaborative Filtering for new article recommendation\"\nauthor:\n  - name: Benjamin Draves\ndate: 2024-11-17\ncategories: [machine-learning, recommendation-systems, collaborative-filters, paper-notes] # self-defined categories\ndraft: true \nformat:\n  html:\n    code-fold: true\njupyter: python3\n---\n\n\n# Paper Overview\n\nThe [*GroupLens: An Open Architecture for Collaborative Filtering of Netnews*](http://dx.doi.org/10.1145/192844.192905) paper was one of the first papers to introduce collaborative filtering for recommendation applications in 1994. \nThe paper focuses on not just the recommendation problem but also how those recommendations are integrated into the Usenet netnews network, displayed to users, and implications for serving personalized news to users. \n\n\n# Introduction & Problem\n\nUsenet's netnews platform was an original social news aggregation network. \nNetnews created and shared bulletin boards where users could post news related to certain topics (see @fig-netnews). \nThis mimics many modern day social media platforms (most notably Reddit).\nWhile users could see and read news posted from other users, users noted that the \"signal to noise\" ratio was too low and had to rely on moderators and basic software (called news agents) to screen, remove, or boost certain news content. \n\n![*Figure* Netnews design and architecture. Figure 1 in Resnick et al. 1994](netnews_architecture.jpeg){fig-align=\"center\"}\n\n\nWhile some of this was successful, most of these approaches were primitive and would not scale to many users and articles. \nGroupLens attempted to create a system (a news client) that would take into account user ratings to *collaboratively* filter our irrelevant news articles bases on the uses ratings of previous articles.  \nThe stated goals of GroupLens was to \n\n1. Openess - other devs could change the rating system to address their own objectives. \n2. Ease of use - users could supply ratings to news articles was non-invasive \n3. Compatibility - the news client was accessible to all Netnews users\n4. Scalability - the rating mechanism scaled to many users and many articles \n5. Privacy - ensure users ratings privacy were preserved\n\n# Methods \nThe paper spend a good deal of time discussing the architecture of *how* article ratings will get passed from server to server to influence filtering of articles for new users (see Figure 2 for instance).\nThe authors also spend time discussing the tradeoffs from building GroupLens on explicit ratings (e.g. user scores on each article from 1-5) versus implicit ratings (e.g. time spend reading each article).\nIn modern applications, most recommendation systems focus on incorporating both explicit and implicit feedback but tend to focus on the later due to higher throughput and reliability of implicit feedback mechanisms (e.g. [TikTok's dwell time](https://support.tiktok.com/en/using-tiktok/exploring-videos/how-tiktok-recommends-content)).\n\nThe authors ultimately decide to focus on explicit article ratings and treated the recommendation problem as a matrix completion problem. \n\n\n\n\n\n# Application\n\n# Other \n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}