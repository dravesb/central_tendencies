{
  "hash": "a75b303967dee3c14b5c12cd55f8e5ab",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"ML with PyTorch & Scikit-Learn: Chapter 11\"\ndescription: \"Implementing a Multilayer Artifical Neural Network from Scratch\"\nauthor:\n  - name: Benjamin Draves\ndate: 11-11-2024\ncategories: [machine-learning, deep-learning] # self-defined categories\n#image: preview-image.png\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nformat:\n  html:\n    code-fold: true\njupyter: python3\n---\n\n\n\n\nFor a demonstration of a line plot on a polar axis, see @fig-polar.\n\n::: {#cell-fig-polar .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](index_files/figure-html/fig-polar-output-1.png){#fig-polar width=450 height=439}\n:::\n:::\n\n\n$$\n\\mathbb{E}[x] = \\int_{0}^{\\infty} xf(x)dx\n$$\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}